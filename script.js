// –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
const allGifts = {
    bear: { name: '–ú–∏—à–∫–∞', value: 15, image: 'https://i.ibb.co/L5hY59n/bear.jpg' }, 
    giftBox: { name: '–ü–æ–¥–∞—Ä–æ–∫', value: 25, image: 'https://i.ibb.co/37y4027/gift.jpg' },
    rocket: { name: '–†–∞–∫–µ—Ç–∞', value: 50, image: 'https://i.ibb.co/BPL233B/rocket.jpg' },
    ring: { name: '–ö–æ–ª—å—Ü–æ', value: 100, image: 'https://i.ibb.co/P440f80/ring.jpg' },
};

// –ú–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –∫–µ–π—Å—ã.
const cases = [
    {
        id: 1,
        name: '–ë–æ–º–∂ –¥–µ–ø',
        description: '–ö–µ–π—Å –¥–ª—è —Å–∞–º—ã—Ö —Å–∫—Ä–æ–º–Ω—ã—Ö.',
        image: 'https://via.placeholder.com/150/FFC0CB/000000?text=–ë–æ–º–∂_–¥–µ–ø',
        price: 25,
        items: [
            { gift: allGifts.bear, chance: 70 },
            { gift: allGifts.giftBox, chance: 30 },
        ]
    },
    {
        id: 2,
        name: '–ú–∏–Ω–∏ –¥–µ–ø',
        description: '–®–∞–Ω—Å –Ω–∞ –±–æ–ª–µ–µ —Ü–µ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏.',
        image: 'https://via.placeholder.com/150/87CEEB/000000?text=–ú–∏–Ω–∏_–¥–µ–ø',
        price: 75,
        items: [
            { gift: allGifts.giftBox, chance: 60 },
            { gift: allGifts.rocket, chance: 40 },
        ]
    },
    {
        id: 3,
        name: '–ü—Ä–æ—Å—Ç–æ –¥–µ–ø',
        description: '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ —Ä–∏—Å–∫–Ω—É—Ç—å.',
        image: 'https://via.placeholder.com/150/9370DB/000000?text=–ü—Ä–æ—Å—Ç–æ_–¥–µ–ø',
        price: 150,
        items: [
            { gift: allGifts.rocket, chance: 50 },
            { gift: allGifts.ring, chance: 50 },
        ]
    },
    {
        id: 4,
        name: '–ú–µ–≥–∞ –¥–µ–ø',
        description: '–®–∞–Ω—Å –Ω–∞ —Å–∞–º—ã–π —Ü–µ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫!',
        image: 'https://via.placeholder.com/150/FFD700/000000?text=–ú–µ–≥–∞_–¥–µ–ø',
        price: 250,
        items: [
            { gift: allGifts.ring, chance: 100 },
        ]
    },
];

// –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let currentBalance = 0;
let userInventory = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
document.addEventListener('DOMContentLoaded', () => {
    initializeTelegramWebApp();
    setupEventListeners();
    generateCaseBoxes();
    loadUserData();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initializeTelegramWebApp() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = Telegram.WebApp.initDataUnsafe.user;
        if (user) {
            document.querySelector('h3').textContent = `@${user.username}`;
        }
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadUserData() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–æ—Ç—É
    // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    updateBalanceDisplay();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    const caseGrid = document.getElementById('caseGrid');
    const balanceAmount = document.getElementById('balanceAmount');
    const caseModal = document.getElementById('caseModal');
    const modalCaseName = document.getElementById('modalCaseName');
    const modalCaseDescription = document.getElementById('modalCaseDescription');
    const modalOpenButton = document.getElementById('modalOpenButton');
    const modalCaseItems = document.getElementById('modalCaseItems');
    const modalCloseButtons = document.querySelectorAll('.modal-close-button');
    const navItems = document.querySelectorAll('.nav-item');
    const pages = document.querySelectorAll('.main-content');
    const addBalanceBtn = document.getElementById('addBalanceBtn');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    navItems.forEach(item => {
        item.addEventListener('click', () => {
            switchPage(item.dataset.page);
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalCloseButtons.forEach(button => {
        button.addEventListener('click', () => {
            caseModal.style.display = 'none';
        });
    });

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    addBalanceBtn.addEventListener('click', () => {
        requestBalanceTopUp();
    });

    // –ö–ª–∏–∫ –ø–æ –æ–±–ª–∞—Å—Ç–∏ –≤–æ–∫—Ä—É–≥ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.addEventListener('click', (e) => {
        if (e.target === caseModal) {
            caseModal.style.display = 'none';
        }
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
function switchPage(pageId) {
    const pages = document.querySelectorAll('.main-content');
    const navItems = document.querySelectorAll('.nav-item');
    
    pages.forEach(page => {
        page.classList.remove('active');
        if (page.id === pageId) {
            page.classList.add('active');
        }
    });
    
    navItems.forEach(item => {
        item.classList.remove('active');
        if (item.dataset.page === pageId) {
            item.classList.add('active');
        }
    });
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–µ–π—Å–æ–≤
function generateCaseBoxes() {
    const caseGrid = document.getElementById('caseGrid');
    caseGrid.innerHTML = '';
    
    cases.forEach(caseData => {
        const caseBox = document.createElement('div');
        caseBox.className = 'case-box';
        caseBox.innerHTML = `
            <div class="case-price">${caseData.price} <i class="fas fa-gem"></i></div>
            <img src="${caseData.image}" alt="${caseData.name}" onerror="this.src='https://via.placeholder.com/150/333/fff?text=–ö–µ–π—Å'">
            <h3>${caseData.name}</h3>
        `;
        caseBox.addEventListener('click', () => openCaseModal(caseData));
        caseGrid.appendChild(caseBox);
    });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–µ–π—Å–∞
function openCaseModal(caseData) {
    const caseModal = document.getElementById('caseModal');
    const modalCaseName = document.getElementById('modalCaseName');
    const modalCaseDescription = document.getElementById('modalCaseDescription');
    const modalOpenButton = document.getElementById('modalOpenButton');
    const modalCaseItems = document.getElementById('modalCaseItems');
    
    modalCaseName.textContent = caseData.name;
    modalCaseDescription.textContent = caseData.description;
    modalOpenButton.textContent = `–û—Ç–∫—Ä—ã—Ç—å –∑–∞ ${caseData.price} ‚≠ê`;
    modalOpenButton.onclick = () => openCase(caseData);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–µ–π—Å–∞
    modalCaseItems.innerHTML = '';
    caseData.items.forEach(item => {
        const itemElement = document.createElement('div');
        itemElement.className = 'modal-item';
        itemElement.innerHTML = `
            <img src="${item.gift.image}" alt="${item.gift.name}" onerror="this.src='https://via.placeholder.com/60/333/fff?text=–ü—Ä–∏–∑'">
            <p>${item.gift.name}</p>
            <p>${item.chance}%</p>
        `;
        modalCaseItems.appendChild(itemElement);
    });
    
    caseModal.style.display = 'flex';
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
function openCase(caseData) {
    if (currentBalance >= caseData.price) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
        sendDataToBot({
            type: 'openCase',
            caseId: caseData.id,
            price: caseData.price
        });
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        document.getElementById('caseModal').style.display = 'none';
    } else {
        showAlert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥! –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.');
    }
}

// –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–¥–∞—Ä–∫–∞
function sellGift(giftValue) {
    sendDataToBot({
        type: 'sellGift',
        value: giftValue
    });
}

// –ó–∞–ø—Ä–æ—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
function requestBalanceTopUp() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ
        Telegram.WebApp.openTelegramLink('https://t.me/your_bot_username?start=topup');
    } else {
        showAlert('–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞');
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞
function sendDataToBot(data) {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        Telegram.WebApp.sendData(JSON.stringify(data));
    } else {
        // –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - —ç–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        simulateBotResponse(data);
    }
}

// –≠–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
function simulateBotResponse(data) {
    if (data.type === 'openCase') {
        const caseData = cases.find(c => c.id === data.caseId);
        if (caseData) {
            // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –ø—Ä–∏–∑–∞
            const randomItem = caseData.items[Math.floor(Math.random() * caseData.items.length)];
            const wonGift = randomItem.gift;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            currentBalance -= caseData.price;
            userInventory.push(wonGift);
            
            updateBalanceDisplay();
            updateInventoryDisplay();
            
            showAlert(`üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${wonGift.name} (${wonGift.value} ‚≠ê)`);
        }
    } else if (data.type === 'sellGift') {
        currentBalance += data.value;
        updateBalanceDisplay();
        showAlert(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${data.value} ‚≠ê`);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
function updateBalanceDisplay() {
    const balanceAmount = document.getElementById('balanceAmount');
    const profileBalance = document.getElementById('profileBalance');
    
    if (balanceAmount) balanceAmount.textContent = currentBalance;
    if (profileBalance) profileBalance.textContent = currentBalance;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function updateInventoryDisplay() {
    const inventoryElement = document.getElementById('inventory');
    if (!inventoryElement) return;
    
    if (userInventory.length === 0) {
        inventoryElement.innerHTML = '<p>–í—ã –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ –∫–µ–π—Å—ã</p>';
        return;
    }
    
    let inventoryHTML = '<div class="inventory-grid">';
    userInventory.forEach((item, index) => {
        inventoryHTML += `
            <div class="inventory-item">
                <img src="${item.image}" alt="${item.name}" onerror="this.src='https://via.placeholder.com/60/333/fff?text=–ü—Ä–∏–∑'">
                <p>${item.name}</p>
                <p>${item.value} ‚≠ê</p>
                <button onclick="sellGift(${item.value})">–ü—Ä–æ–¥–∞—Ç—å</button>
            </div>
        `;
    });
    inventoryHTML += '</div>';
    
    inventoryElement.innerHTML = inventoryHTML;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showAlert(message) {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        Telegram.WebApp.showAlert(message);
    } else {
        alert(message);
    }
}

// –ó–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ —É –±–æ—Ç–∞
function requestBalance() {
    sendDataToBot({
        type: 'getBalance'
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
    Telegram.WebApp.onEvent('message', (message) => {
        try {
            const data = JSON.parse(message);
            if (data.balance !== undefined) {
                currentBalance = data.balance;
                updateBalanceDisplay();
            }
            if (data.inventory) {
                userInventory = data.inventory;
                updateInventoryDisplay();
            }
        } catch (e) {
            console.error('Error parsing message:', e);
        }
    });
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
setTimeout(requestBalance, 1000);